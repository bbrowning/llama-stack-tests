{"created": 1747248216.450021, "duration": 111.80687880516052, "exitcode": 1, "root": "/home/runner/work/llama-stack-tests/llama-stack-tests", "environment": {}, "summary": {"passed": 75, "failed": 1, "total": 76, "collected": 76}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/verifications/openai_api/test_chat_completion.py", "type": "Module"}]}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py", "outcome": "passed", "result": [{"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-earth]", "type": "Function", "lineno": 46}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-saturn]", "type": "Function", "lineno": 46}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-mini-earth]", "type": "Function", "lineno": 46}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-mini-saturn]", "type": "Function", "lineno": 46}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-earth]", "type": "Function", "lineno": 65}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-saturn]", "type": "Function", "lineno": 65}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-mini-earth]", "type": "Function", "lineno": 65}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-mini-saturn]", "type": "Function", "lineno": 65}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-messages_missing]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-messages_role_invalid]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tool_choice_invalid]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tools_type_invalid]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-messages_missing]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "type": "Function", "lineno": 89}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-messages_missing]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-messages_role_invalid]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tool_choice_invalid]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tools_type_invalid]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-messages_missing]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "type": "Function", "lineno": 110}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_image[gpt-4o-case0]", "type": "Function", "lineno": 133}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_image[gpt-4o-mini-case0]", "type": "Function", "lineno": 133}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_image[gpt-4o-case0]", "type": "Function", "lineno": 152}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_image[gpt-4o-mini-case0]", "type": "Function", "lineno": 152}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-calendar]", "type": "Function", "lineno": 176}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-math]", "type": "Function", "lineno": 176}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-mini-calendar]", "type": "Function", "lineno": 176}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-mini-math]", "type": "Function", "lineno": 176}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-calendar]", "type": "Function", "lineno": 199}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-math]", "type": "Function", "lineno": 199}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-mini-calendar]", "type": "Function", "lineno": 199}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-mini-math]", "type": "Function", "lineno": 199}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_calling[gpt-4o-case0]", "type": "Function", "lineno": 221}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_calling[gpt-4o-mini-case0]", "type": "Function", "lineno": 221}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_calling[gpt-4o-case0]", "type": "Function", "lineno": 245}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_calling[gpt-4o-mini-case0]", "type": "Function", "lineno": 245}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_required[gpt-4o-case0]", "type": "Function", "lineno": 273}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_required[gpt-4o-mini-case0]", "type": "Function", "lineno": 273}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_required[gpt-4o-case0]", "type": "Function", "lineno": 297}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_required[gpt-4o-mini-case0]", "type": "Function", "lineno": 297}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_none[gpt-4o-case0]", "type": "Function", "lineno": 324}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_none[gpt-4o-mini-case0]", "type": "Function", "lineno": 324}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_none[gpt-4o-case0]", "type": "Function", "lineno": 347}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_none[gpt-4o-mini-case0]", "type": "Function", "lineno": 347}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "type": "Function", "lineno": 375}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "type": "Function", "lineno": 466}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-stream=False]", "type": "Function", "lineno": 549}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-stream=True]", "type": "Function", "lineno": 549}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=False]", "type": "Function", "lineno": 549}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=True]", "type": "Function", "lineno": 549}]}], "tests": [{"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-earth]", "lineno": 46, "outcome": "passed", "keywords": ["test_chat_non_streaming_basic[gpt-4o-earth]", "parametrize", "pytestmark", "gpt-4o-earth", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "earth"}, "setup": {"duration": 0.054346340000051896, "outcome": "passed"}, "call": {"duration": 1.434931913000014, "outcome": "passed"}, "teardown": {"duration": 0.00020119600003454252, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-saturn]", "lineno": 46, "outcome": "passed", "keywords": ["test_chat_non_streaming_basic[gpt-4o-saturn]", "parametrize", "pytestmark", "gpt-4o-saturn", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "saturn"}, "setup": {"duration": 0.023193391999939195, "outcome": "passed"}, "call": {"duration": 0.7175139429999717, "outcome": "passed"}, "teardown": {"duration": 0.00019750900003145944, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-mini-earth]", "lineno": 46, "outcome": "passed", "keywords": ["test_chat_non_streaming_basic[gpt-4o-mini-earth]", "parametrize", "pytestmark", "gpt-4o-mini-earth", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "earth"}, "setup": {"duration": 0.02272109700004421, "outcome": "passed"}, "call": {"duration": 0.37620236499992643, "outcome": "passed"}, "teardown": {"duration": 0.00017421599989120296, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-mini-saturn]", "lineno": 46, "outcome": "passed", "keywords": ["test_chat_non_streaming_basic[gpt-4o-mini-saturn]", "parametrize", "pytestmark", "gpt-4o-mini-saturn", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "saturn"}, "setup": {"duration": 0.022826625999982753, "outcome": "passed"}, "call": {"duration": 0.7948034710000229, "outcome": "passed"}, "teardown": {"duration": 0.0001778330000661299, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-earth]", "lineno": 65, "outcome": "passed", "keywords": ["test_chat_streaming_basic[gpt-4o-earth]", "parametrize", "pytestmark", "gpt-4o-earth", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "earth"}, "setup": {"duration": 0.02447485199991206, "outcome": "passed"}, "call": {"duration": 0.3877671529999134, "outcome": "passed"}, "teardown": {"duration": 0.00018326300005355733, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-saturn]", "lineno": 65, "outcome": "passed", "keywords": ["test_chat_streaming_basic[gpt-4o-saturn]", "parametrize", "pytestmark", "gpt-4o-saturn", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "saturn"}, "setup": {"duration": 0.023106207999944672, "outcome": "passed"}, "call": {"duration": 0.9885250780000661, "outcome": "passed"}, "teardown": {"duration": 0.00021826900001542526, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-mini-earth]", "lineno": 65, "outcome": "passed", "keywords": ["test_chat_streaming_basic[gpt-4o-mini-earth]", "parametrize", "pytestmark", "gpt-4o-mini-earth", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "earth"}, "setup": {"duration": 0.02284335599995302, "outcome": "passed"}, "call": {"duration": 0.47816061000003174, "outcome": "passed"}, "teardown": {"duration": 0.00018503700005112478, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-mini-saturn]", "lineno": 65, "outcome": "passed", "keywords": ["test_chat_streaming_basic[gpt-4o-mini-saturn]", "parametrize", "pytestmark", "gpt-4o-mini-saturn", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "saturn"}, "setup": {"duration": 0.0227563820000114, "outcome": "passed"}, "call": {"duration": 0.7715553570000111, "outcome": "passed"}, "teardown": {"duration": 0.00018113999999513908, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-messages_missing]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-messages_missing]", "parametrize", "pytestmark", "gpt-4o-messages_missing", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "messages_missing"}, "setup": {"duration": 0.022830569999996442, "outcome": "passed"}, "call": {"duration": 0.1279267740000023, "outcome": "passed"}, "teardown": {"duration": 0.00023170299994035304, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-messages_role_invalid]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-messages_role_invalid]", "parametrize", "pytestmark", "gpt-4o-messages_role_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "messages_role_invalid"}, "setup": {"duration": 0.02277643000002172, "outcome": "passed"}, "call": {"duration": 0.17858411100007743, "outcome": "passed"}, "teardown": {"duration": 0.00018812200005413615, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tool_choice_invalid]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-tool_choice_invalid]", "parametrize", "pytestmark", "gpt-4o-tool_choice_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tool_choice_invalid"}, "setup": {"duration": 0.022685290000026725, "outcome": "passed"}, "call": {"duration": 0.1188007190000917, "outcome": "passed"}, "teardown": {"duration": 0.00018939500000669796, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "parametrize", "pytestmark", "gpt-4o-tool_choice_no_tools", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tool_choice_no_tools"}, "setup": {"duration": 0.022033852000049592, "outcome": "passed"}, "call": {"duration": 0.13132604100007939, "outcome": "passed"}, "teardown": {"duration": 0.00016434799999842653, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tools_type_invalid]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-tools_type_invalid]", "parametrize", "pytestmark", "gpt-4o-tools_type_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tools_type_invalid"}, "setup": {"duration": 0.02189749399997254, "outcome": "passed"}, "call": {"duration": 0.10212730199998532, "outcome": "passed"}, "teardown": {"duration": 0.00020005399994715845, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-messages_missing]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-messages_missing]", "parametrize", "pytestmark", "gpt-4o-mini-messages_missing", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "messages_missing"}, "setup": {"duration": 0.022177437999971517, "outcome": "passed"}, "call": {"duration": 0.08937356599994928, "outcome": "passed"}, "teardown": {"duration": 0.0001864189999878363, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-messages_role_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "messages_role_invalid"}, "setup": {"duration": 0.021971653000036895, "outcome": "passed"}, "call": {"duration": 0.11347645299997566, "outcome": "passed"}, "teardown": {"duration": 0.00018964499997764506, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-tool_choice_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tool_choice_invalid"}, "setup": {"duration": 0.022067403000050945, "outcome": "passed"}, "call": {"duration": 0.10509360699995796, "outcome": "passed"}, "teardown": {"duration": 0.0001820920000454862, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "parametrize", "pytestmark", "gpt-4o-mini-tool_choice_no_tools", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tool_choice_no_tools"}, "setup": {"duration": 0.02196899900002336, "outcome": "passed"}, "call": {"duration": 0.21577767099995526, "outcome": "passed"}, "teardown": {"duration": 0.0001754480000499825, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "lineno": 89, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-tools_type_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tools_type_invalid"}, "setup": {"duration": 0.021899177000022974, "outcome": "passed"}, "call": {"duration": 0.12867525299998306, "outcome": "passed"}, "teardown": {"duration": 0.0001800170000478829, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-messages_missing]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-messages_missing]", "parametrize", "pytestmark", "gpt-4o-messages_missing", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "messages_missing"}, "setup": {"duration": 0.02227803000005224, "outcome": "passed"}, "call": {"duration": 0.1586328420000882, "outcome": "passed"}, "teardown": {"duration": 0.00020239900004526135, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-messages_role_invalid]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-messages_role_invalid]", "parametrize", "pytestmark", "gpt-4o-messages_role_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "messages_role_invalid"}, "setup": {"duration": 0.02212710500009507, "outcome": "passed"}, "call": {"duration": 0.119803202000071, "outcome": "passed"}, "teardown": {"duration": 0.00017184199998609984, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tool_choice_invalid]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-tool_choice_invalid]", "parametrize", "pytestmark", "gpt-4o-tool_choice_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tool_choice_invalid"}, "setup": {"duration": 0.022887317000026997, "outcome": "passed"}, "call": {"duration": 0.11929688200007149, "outcome": "passed"}, "teardown": {"duration": 0.0001897349999353537, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "parametrize", "pytestmark", "gpt-4o-tool_choice_no_tools", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tool_choice_no_tools"}, "setup": {"duration": 0.03050242699998762, "outcome": "passed"}, "call": {"duration": 0.12589000700006636, "outcome": "passed"}, "teardown": {"duration": 0.00016617200003565813, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tools_type_invalid]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-tools_type_invalid]", "parametrize", "pytestmark", "gpt-4o-tools_type_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tools_type_invalid"}, "setup": {"duration": 0.0221427249999806, "outcome": "passed"}, "call": {"duration": 0.10380700700000034, "outcome": "passed"}, "teardown": {"duration": 0.00020459400002437178, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-messages_missing]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-messages_missing]", "parametrize", "pytestmark", "gpt-4o-mini-messages_missing", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "messages_missing"}, "setup": {"duration": 0.02212470899996788, "outcome": "passed"}, "call": {"duration": 0.21522358999993685, "outcome": "passed"}, "teardown": {"duration": 0.00017625999998927, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-messages_role_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "messages_role_invalid"}, "setup": {"duration": 0.022062776000097983, "outcome": "passed"}, "call": {"duration": 0.10464832299999216, "outcome": "passed"}, "teardown": {"duration": 0.00017894500001602864, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-tool_choice_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tool_choice_invalid"}, "setup": {"duration": 0.021860474999925827, "outcome": "passed"}, "call": {"duration": 0.09985980700002983, "outcome": "passed"}, "teardown": {"duration": 0.0001897550000649062, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "parametrize", "pytestmark", "gpt-4o-mini-tool_choice_no_tools", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tool_choice_no_tools"}, "setup": {"duration": 0.02187956000000213, "outcome": "passed"}, "call": {"duration": 0.16158157600000322, "outcome": "passed"}, "teardown": {"duration": 0.00018800200007262902, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "lineno": 110, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-tools_type_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tools_type_invalid"}, "setup": {"duration": 0.021970500999941578, "outcome": "passed"}, "call": {"duration": 0.09733103199994275, "outcome": "passed"}, "teardown": {"duration": 0.00018837200002508325, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_image[gpt-4o-case0]", "lineno": 133, "outcome": "passed", "keywords": ["test_chat_non_streaming_image[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.02218164600003547, "outcome": "passed"}, "call": {"duration": 3.8310208340000145, "outcome": "passed"}, "teardown": {"duration": 0.00020609600005627726, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_image[gpt-4o-mini-case0]", "lineno": 133, "outcome": "passed", "keywords": ["test_chat_non_streaming_image[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.022523768000041855, "outcome": "passed"}, "call": {"duration": 2.194079294000062, "outcome": "passed"}, "teardown": {"duration": 0.00018734099990069808, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_image[gpt-4o-case0]", "lineno": 152, "outcome": "passed", "keywords": ["test_chat_streaming_image[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.0221388359999537, "outcome": "passed"}, "call": {"duration": 2.163664004999987, "outcome": "passed"}, "teardown": {"duration": 0.00018668000006982766, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_image[gpt-4o-mini-case0]", "lineno": 152, "outcome": "passed", "keywords": ["test_chat_streaming_image[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.02215747000002466, "outcome": "passed"}, "call": {"duration": 2.115182365999999, "outcome": "passed"}, "teardown": {"duration": 0.0001860980000856216, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-calendar]", "lineno": 176, "outcome": "passed", "keywords": ["test_chat_non_streaming_structured_output[gpt-4o-calendar]", "parametrize", "pytestmark", "gpt-4o-calendar", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "calendar"}, "setup": {"duration": 0.022266767000019172, "outcome": "passed"}, "call": {"duration": 0.7884563759999992, "outcome": "passed"}, "teardown": {"duration": 0.00019228999997267238, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-math]", "lineno": 176, "outcome": "passed", "keywords": ["test_chat_non_streaming_structured_output[gpt-4o-math]", "parametrize", "pytestmark", "gpt-4o-math", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "math"}, "setup": {"duration": 0.02240378299995882, "outcome": "passed"}, "call": {"duration": 3.722572344000014, "outcome": "passed"}, "teardown": {"duration": 0.00021336899999369052, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-mini-calendar]", "lineno": 176, "outcome": "passed", "keywords": ["test_chat_non_streaming_structured_output[gpt-4o-mini-calendar]", "parametrize", "pytestmark", "gpt-4o-mini-calendar", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "calendar"}, "setup": {"duration": 0.022285631000045214, "outcome": "passed"}, "call": {"duration": 0.5746149770000102, "outcome": "passed"}, "teardown": {"duration": 0.00016794499993011414, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-mini-math]", "lineno": 176, "outcome": "passed", "keywords": ["test_chat_non_streaming_structured_output[gpt-4o-mini-math]", "parametrize", "pytestmark", "gpt-4o-mini-math", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "math"}, "setup": {"duration": 0.022080399999936162, "outcome": "passed"}, "call": {"duration": 2.2422915170000124, "outcome": "passed"}, "teardown": {"duration": 0.00019209000004138943, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-calendar]", "lineno": 199, "outcome": "passed", "keywords": ["test_chat_streaming_structured_output[gpt-4o-calendar]", "parametrize", "pytestmark", "gpt-4o-calendar", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "calendar"}, "setup": {"duration": 0.022212487000047076, "outcome": "passed"}, "call": {"duration": 0.8306095380000897, "outcome": "passed"}, "teardown": {"duration": 0.00017176100004689943, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-math]", "lineno": 199, "outcome": "passed", "keywords": ["test_chat_streaming_structured_output[gpt-4o-math]", "parametrize", "pytestmark", "gpt-4o-math", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "math"}, "setup": {"duration": 0.022151011999994807, "outcome": "passed"}, "call": {"duration": 6.28547125099999, "outcome": "passed"}, "teardown": {"duration": 0.00021820899996782828, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-mini-calendar]", "lineno": 199, "outcome": "passed", "keywords": ["test_chat_streaming_structured_output[gpt-4o-mini-calendar]", "parametrize", "pytestmark", "gpt-4o-mini-calendar", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "calendar"}, "setup": {"duration": 0.022285590000024058, "outcome": "passed"}, "call": {"duration": 0.5705439009999509, "outcome": "passed"}, "teardown": {"duration": 0.0001781639999762774, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-mini-math]", "lineno": 199, "outcome": "passed", "keywords": ["test_chat_streaming_structured_output[gpt-4o-mini-math]", "parametrize", "pytestmark", "gpt-4o-mini-math", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "math"}, "setup": {"duration": 0.022197553000069092, "outcome": "passed"}, "call": {"duration": 2.6198928650001108, "outcome": "passed"}, "teardown": {"duration": 0.00019449400008397788, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_calling[gpt-4o-case0]", "lineno": 221, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_calling[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.022293693000051462, "outcome": "passed"}, "call": {"duration": 0.5986876220000568, "outcome": "passed"}, "teardown": {"duration": 0.00017345399999157962, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_calling[gpt-4o-mini-case0]", "lineno": 221, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_calling[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.022932929000035074, "outcome": "passed"}, "call": {"duration": 0.640267912000013, "outcome": "passed"}, "teardown": {"duration": 0.0001860779999560691, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_calling[gpt-4o-case0]", "lineno": 245, "outcome": "passed", "keywords": ["test_chat_streaming_tool_calling[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.02280067100002725, "outcome": "passed"}, "call": {"duration": 0.6663634029999912, "outcome": "passed"}, "teardown": {"duration": 0.0001905359999909706, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_calling[gpt-4o-mini-case0]", "lineno": 245, "outcome": "passed", "keywords": ["test_chat_streaming_tool_calling[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.03259056700005658, "outcome": "passed"}, "call": {"duration": 0.6400891580000234, "outcome": "passed"}, "teardown": {"duration": 0.00021204699999088916, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_required[gpt-4o-case0]", "lineno": 273, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_choice_required[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.02222645699998793, "outcome": "passed"}, "call": {"duration": 0.49670194199995876, "outcome": "passed"}, "teardown": {"duration": 0.00017240199997559102, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_required[gpt-4o-mini-case0]", "lineno": 273, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_choice_required[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.02216385999997783, "outcome": "passed"}, "call": {"duration": 0.5378792699999622, "outcome": "passed"}, "teardown": {"duration": 0.00016345700009878783, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_required[gpt-4o-case0]", "lineno": 297, "outcome": "passed", "keywords": ["test_chat_streaming_tool_choice_required[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.022109125999918433, "outcome": "passed"}, "call": {"duration": 0.6268831159999309, "outcome": "passed"}, "teardown": {"duration": 0.0002605170000151702, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_required[gpt-4o-mini-case0]", "lineno": 297, "outcome": "passed", "keywords": ["test_chat_streaming_tool_choice_required[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.022121263000030922, "outcome": "passed"}, "call": {"duration": 0.5069488980000187, "outcome": "passed"}, "teardown": {"duration": 0.000282749000007243, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_none[gpt-4o-case0]", "lineno": 324, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_choice_none[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.02218811900002038, "outcome": "passed"}, "call": {"duration": 0.3977193929999885, "outcome": "passed"}, "teardown": {"duration": 0.00019195000004401663, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_none[gpt-4o-mini-case0]", "lineno": 324, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_choice_none[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.02209222999999838, "outcome": "passed"}, "call": {"duration": 0.6329345090000515, "outcome": "passed"}, "teardown": {"duration": 0.0001907470000332978, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_none[gpt-4o-case0]", "lineno": 347, "outcome": "passed", "keywords": ["test_chat_streaming_tool_choice_none[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.022021775999974125, "outcome": "passed"}, "call": {"duration": 0.5880764360000512, "outcome": "passed"}, "teardown": {"duration": 0.00020742800006701145, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_none[gpt-4o-mini-case0]", "lineno": 347, "outcome": "passed", "keywords": ["test_chat_streaming_tool_choice_none[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.022136672999977236, "outcome": "passed"}, "call": {"duration": 0.908264747999965, "outcome": "passed"}, "teardown": {"duration": 0.00017972599994209304, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "parametrize", "pytestmark", "gpt-4o-text_then_weather_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "text_then_weather_tool"}, "setup": {"duration": 0.022146963000068354, "outcome": "passed"}, "call": {"duration": 3.285434652000049, "outcome": "passed"}, "teardown": {"duration": 0.0002178580000418151, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "parametrize", "pytestmark", "gpt-4o-weather_tool_then_text", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "weather_tool_then_text"}, "setup": {"duration": 0.022156027999926664, "outcome": "passed"}, "call": {"duration": 1.2706346989999702, "outcome": "passed"}, "teardown": {"duration": 0.00018651000004865637, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "parametrize", "pytestmark", "gpt-4o-add_product_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "add_product_tool"}, "setup": {"duration": 0.0222570270000233, "outcome": "passed"}, "call": {"duration": 0.9616160929999751, "outcome": "passed"}, "teardown": {"duration": 0.00019153799996729504, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "parametrize", "pytestmark", "gpt-4o-get_then_create_event_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "get_then_create_event_tool"}, "setup": {"duration": 0.022287293999966096, "outcome": "passed"}, "call": {"duration": 3.024803923000036, "outcome": "passed"}, "teardown": {"duration": 0.0001931610000838191, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "lineno": 375, "outcome": "failed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "parametrize", "pytestmark", "gpt-4o-compare_monthly_expense_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "compare_monthly_expense_tool"}, "setup": {"duration": 0.022500373000070795, "outcome": "passed"}, "call": {"duration": 2.9520462579999958, "outcome": "failed", "crash": {"path": "/home/runner/work/llama-stack-tests/llama-stack-tests/tests/verifications/openai_api/test_chat_completion.py", "lineno": 434, "message": "AssertionError: Expected 1 tool calls, but got 2\nassert 2 == 1\n +  where 2 = len(([ChatCompletionMessageToolCall(id='call_8eI1qVwGv8KkYHlB2GS4tQeQ', function=Function(arguments='{\"month\": 2, \"year\": 2024}', name='getMonthlyExpenseSummary'), type='function'), ChatCompletionMessageToolCall(id='call_CL2kcbJhirDB2HTapzhz8rR4', function=Function(arguments='{\"month\": 1, \"year\": 2025}', name='getMonthlyExpenseSummary'), type='function')]))\n +    where [ChatCompletionMessageToolCall(id='call_8eI1qVwGv8KkYHlB2GS4tQeQ', function=Function(arguments='{\"month\": 2, \"year\": 2024}', name='getMonthlyExpenseSummary'), type='function'), ChatCompletionMessageToolCall(id='call_CL2kcbJhirDB2HTapzhz8rR4', function=Function(arguments='{\"month\": 1, \"year\": 2025}', name='getMonthlyExpenseSummary'), type='function')] = ChatCompletionMessage(content=None, refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_8eI1qVwGv8KkYHlB2GS4tQeQ', function=Function(arguments='{\"month\": 2, \"year\": 2024}', name='getMonthlyExpenseSummary'), type='function'), ChatCompletionMessageToolCall(id='call_CL2kcbJhirDB2HTapzhz8rR4', function=Function(arguments='{\"month\": 1, \"year\": 2025}', name='getMonthlyExpenseSummary'), type='function')]).tool_calls"}, "traceback": [{"path": "tests/verifications/openai_api/test_chat_completion.py", "lineno": 434, "message": "AssertionError"}], "longrepr": "request = <FixtureRequest for <Function test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]>>\nopenai_client = <openai.OpenAI object at 0x7fd1046e12a0>, model = 'gpt-4o'\nprovider = 'openai'\nverification_config = {'providers': {'cerebras': {'api_key_var': 'CEREBRAS_API_KEY', 'base_url': 'https://api.cerebras.ai/v1', 'model_displa...-versatile', 'meta-llama/llama-4-scout-17b-16e-instruct', 'meta-llama/llama-4-maverick-17b-128e-instruct'], ...}, ...}}\ncase = {'case_id': 'compare_monthly_expense_tool', 'expected': [{'num_tool_calls': 1, 'tool_arguments': {'month': 1, 'year': ... 'Total expenses for January 2025: $1000'}\"}, {'response': \"{'response': 'Total expenses for February 2024: $2000'}\"}]}\n\n    @pytest.mark.parametrize(\n        \"case\",\n        chat_completion_test_cases.get(\"test_chat_multi_turn_tool_calling\", {}).get(\"test_params\", {}).get(\"case\", []),\n        ids=case_id_generator,\n    )\n    def test_chat_non_streaming_multi_turn_tool_calling(request, openai_client, model, provider, verification_config, case):\n        \"\"\"\n        Test cases for multi-turn tool calling.\n        Tool calls are asserted.\n        Tool responses are provided in the test case.\n        Final response is asserted.\n        \"\"\"\n    \n        test_name_base = get_base_test_name(request)\n        if should_skip_test(verification_config, provider, model, test_name_base):\n            pytest.skip(f\"Skipping {test_name_base} for model {model} on provider {provider} based on config.\")\n    \n        # Create a copy of the messages list to avoid modifying the original\n        messages = []\n        tools = case[\"input\"][\"tools\"]\n        # Use deepcopy to prevent modification across runs/parametrization\n        expected_results = copy.deepcopy(case[\"expected\"])\n        tool_responses = copy.deepcopy(case.get(\"tool_responses\", []))\n        input_messages_turns = copy.deepcopy(case[\"input\"][\"messages\"])\n    \n        # keep going until either\n        # 1. we have messages to test in multi-turn\n        # 2. no messages but last message is tool response\n        while len(input_messages_turns) > 0 or (len(messages) > 0 and messages[-1][\"role\"] == \"tool\"):\n            # do not take new messages if last message is tool response\n            if len(messages) == 0 or messages[-1][\"role\"] != \"tool\":\n                new_messages = input_messages_turns.pop(0)\n                # Ensure new_messages is a list of message objects\n                if isinstance(new_messages, list):\n                    messages.extend(new_messages)\n                else:\n                    # If it's a single message object, add it directly\n                    messages.append(new_messages)\n    \n            # --- API Call ---\n            response = openai_client.chat.completions.create(\n                model=model,\n                messages=messages,\n                tools=tools,\n                stream=False,\n            )\n    \n            # --- Process Response ---\n            assistant_message = response.choices[0].message\n            messages.append(assistant_message.model_dump(exclude_unset=True))\n    \n            assert assistant_message.role == \"assistant\"\n    \n            # Get the expected result data\n            expected = expected_results.pop(0)\n            num_tool_calls = expected[\"num_tool_calls\"]\n    \n            # --- Assertions based on expected result ---\n>           assert len(assistant_message.tool_calls or []) == num_tool_calls, (\n                f\"Expected {num_tool_calls} tool calls, but got {len(assistant_message.tool_calls or [])}\"\n            )\nE           AssertionError: Expected 1 tool calls, but got 2\nE           assert 2 == 1\nE            +  where 2 = len(([ChatCompletionMessageToolCall(id='call_8eI1qVwGv8KkYHlB2GS4tQeQ', function=Function(arguments='{\"month\": 2, \"year\": 2024}', name='getMonthlyExpenseSummary'), type='function'), ChatCompletionMessageToolCall(id='call_CL2kcbJhirDB2HTapzhz8rR4', function=Function(arguments='{\"month\": 1, \"year\": 2025}', name='getMonthlyExpenseSummary'), type='function')]))\nE            +    where [ChatCompletionMessageToolCall(id='call_8eI1qVwGv8KkYHlB2GS4tQeQ', function=Function(arguments='{\"month\": 2, \"year\": 2024}', name='getMonthlyExpenseSummary'), type='function'), ChatCompletionMessageToolCall(id='call_CL2kcbJhirDB2HTapzhz8rR4', function=Function(arguments='{\"month\": 1, \"year\": 2025}', name='getMonthlyExpenseSummary'), type='function')] = ChatCompletionMessage(content=None, refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_8eI1qVwGv8KkYHlB2GS4tQeQ', function=Function(arguments='{\"month\": 2, \"year\": 2024}', name='getMonthlyExpenseSummary'), type='function'), ChatCompletionMessageToolCall(id='call_CL2kcbJhirDB2HTapzhz8rR4', function=Function(arguments='{\"month\": 1, \"year\": 2025}', name='getMonthlyExpenseSummary'), type='function')]).tool_calls\n\ntests/verifications/openai_api/test_chat_completion.py:434: AssertionError"}, "teardown": {"duration": 0.0003044100000124672, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "parametrize", "pytestmark", "gpt-4o-mini-text_then_weather_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "text_then_weather_tool"}, "setup": {"duration": 0.02426710899999307, "outcome": "passed"}, "call": {"duration": 1.6538787690000163, "outcome": "passed"}, "teardown": {"duration": 0.00021397900002284587, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "parametrize", "pytestmark", "gpt-4o-mini-weather_tool_then_text", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "weather_tool_then_text"}, "setup": {"duration": 0.022377820000087922, "outcome": "passed"}, "call": {"duration": 1.0788003049999588, "outcome": "passed"}, "teardown": {"duration": 0.000203119000047991, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "parametrize", "pytestmark", "gpt-4o-mini-add_product_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "add_product_tool"}, "setup": {"duration": 0.022081707999973332, "outcome": "passed"}, "call": {"duration": 1.6157532170000195, "outcome": "passed"}, "teardown": {"duration": 0.00018503699993743794, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "parametrize", "pytestmark", "gpt-4o-mini-get_then_create_event_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "get_then_create_event_tool"}, "setup": {"duration": 0.02211006700008511, "outcome": "passed"}, "call": {"duration": 4.858927965000021, "outcome": "passed"}, "teardown": {"duration": 0.00021745799995187554, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "lineno": 375, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "parametrize", "pytestmark", "gpt-4o-mini-compare_monthly_expense_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "compare_monthly_expense_tool"}, "setup": {"duration": 0.022272181999937857, "outcome": "passed"}, "call": {"duration": 2.3563382140000613, "outcome": "passed"}, "teardown": {"duration": 0.00021447099993565644, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "parametrize", "pytestmark", "gpt-4o-text_then_weather_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "text_then_weather_tool"}, "setup": {"duration": 0.022443653999971502, "outcome": "passed"}, "call": {"duration": 1.5844272030000184, "outcome": "passed"}, "teardown": {"duration": 0.0001889939999273338, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "parametrize", "pytestmark", "gpt-4o-weather_tool_then_text", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "weather_tool_then_text"}, "setup": {"duration": 0.022411545000068145, "outcome": "passed"}, "call": {"duration": 1.0418771680000418, "outcome": "passed"}, "teardown": {"duration": 0.0002114960000199062, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "parametrize", "pytestmark", "gpt-4o-add_product_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "add_product_tool"}, "setup": {"duration": 0.022153441000000385, "outcome": "passed"}, "call": {"duration": 1.2883499369999072, "outcome": "passed"}, "teardown": {"duration": 0.00020659699998759606, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "parametrize", "pytestmark", "gpt-4o-get_then_create_event_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "get_then_create_event_tool"}, "setup": {"duration": 0.021920173000012255, "outcome": "passed"}, "call": {"duration": 3.469680175999997, "outcome": "passed"}, "teardown": {"duration": 0.0001953160000311982, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "parametrize", "pytestmark", "gpt-4o-compare_monthly_expense_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "compare_monthly_expense_tool"}, "setup": {"duration": 0.02272053199999391, "outcome": "passed"}, "call": {"duration": 2.4130316150000226, "outcome": "passed"}, "teardown": {"duration": 0.0002240889999711726, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "parametrize", "pytestmark", "gpt-4o-mini-text_then_weather_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "text_then_weather_tool"}, "setup": {"duration": 0.06076284599998871, "outcome": "passed"}, "call": {"duration": 1.9503866799999514, "outcome": "passed"}, "teardown": {"duration": 0.00022597300005600118, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "parametrize", "pytestmark", "gpt-4o-mini-weather_tool_then_text", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "weather_tool_then_text"}, "setup": {"duration": 0.022458500000084314, "outcome": "passed"}, "call": {"duration": 1.025429927999994, "outcome": "passed"}, "teardown": {"duration": 0.00021717599997828074, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "parametrize", "pytestmark", "gpt-4o-mini-add_product_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "add_product_tool"}, "setup": {"duration": 0.022174539000047844, "outcome": "passed"}, "call": {"duration": 1.4255601720000186, "outcome": "passed"}, "teardown": {"duration": 0.0002264429999740969, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "parametrize", "pytestmark", "gpt-4o-mini-get_then_create_event_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "get_then_create_event_tool"}, "setup": {"duration": 0.022112897000056364, "outcome": "passed"}, "call": {"duration": 2.812487137000062, "outcome": "passed"}, "teardown": {"duration": 0.00021546300001773488, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "lineno": 466, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "parametrize", "pytestmark", "gpt-4o-mini-compare_monthly_expense_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "compare_monthly_expense_tool"}, "setup": {"duration": 0.022222661999990123, "outcome": "passed"}, "call": {"duration": 2.1240535019999243, "outcome": "passed"}, "teardown": {"duration": 0.00021137499993528763, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-stream=False]", "lineno": 549, "outcome": "passed", "keywords": ["test_chat_multi_turn_multiple_images[gpt-4o-stream=False]", "parametrize", "pytestmark", "gpt-4o-stream=False", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "stream=False"}, "setup": {"duration": 0.02736414599996806, "outcome": "passed"}, "call": {"duration": 6.341758163999998, "outcome": "passed"}, "teardown": {"duration": 0.00021444100002554478, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-stream=True]", "lineno": 549, "outcome": "passed", "keywords": ["test_chat_multi_turn_multiple_images[gpt-4o-stream=True]", "parametrize", "pytestmark", "gpt-4o-stream=True", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "stream=True"}, "setup": {"duration": 0.023119851999922503, "outcome": "passed"}, "call": {"duration": 5.043845486000009, "outcome": "passed"}, "teardown": {"duration": 0.00020191800001612137, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=False]", "lineno": 549, "outcome": "passed", "keywords": ["test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=False]", "parametrize", "pytestmark", "gpt-4o-mini-stream=False", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "stream=False"}, "setup": {"duration": 0.022836093999899276, "outcome": "passed"}, "call": {"duration": 5.87701446799997, "outcome": "passed"}, "teardown": {"duration": 0.000203261000024213, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=True]", "lineno": 549, "outcome": "passed", "keywords": ["test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=True]", "parametrize", "pytestmark", "gpt-4o-mini-stream=True", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "stream=True"}, "setup": {"duration": 0.02287867399991228, "outcome": "passed"}, "call": {"duration": 6.347212163999984, "outcome": "passed"}, "teardown": {"duration": 0.001571229999967727, "outcome": "passed"}}]}