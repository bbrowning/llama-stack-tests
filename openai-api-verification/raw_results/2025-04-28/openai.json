{"created": 1745806243.712725, "duration": 115.50296211242676, "exitcode": 1, "root": "/home/runner/work/llama-stack-tests/llama-stack-tests", "environment": {}, "summary": {"passed": 74, "failed": 2, "total": 76, "collected": 76}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/verifications/openai_api/test_chat_completion.py", "type": "Module"}]}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py", "outcome": "passed", "result": [{"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-earth]", "type": "Function", "lineno": 96}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-saturn]", "type": "Function", "lineno": 96}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-mini-earth]", "type": "Function", "lineno": 96}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-mini-saturn]", "type": "Function", "lineno": 96}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-earth]", "type": "Function", "lineno": 115}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-saturn]", "type": "Function", "lineno": 115}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-mini-earth]", "type": "Function", "lineno": 115}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-mini-saturn]", "type": "Function", "lineno": 115}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-messages_missing]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-messages_role_invalid]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tool_choice_invalid]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tools_type_invalid]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-messages_missing]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "type": "Function", "lineno": 139}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-messages_missing]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-messages_role_invalid]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tool_choice_invalid]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tools_type_invalid]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-messages_missing]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "type": "Function", "lineno": 160}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_image[gpt-4o-case0]", "type": "Function", "lineno": 183}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_image[gpt-4o-mini-case0]", "type": "Function", "lineno": 183}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_image[gpt-4o-case0]", "type": "Function", "lineno": 202}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_image[gpt-4o-mini-case0]", "type": "Function", "lineno": 202}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-calendar]", "type": "Function", "lineno": 226}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-math]", "type": "Function", "lineno": 226}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-mini-calendar]", "type": "Function", "lineno": 226}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-mini-math]", "type": "Function", "lineno": 226}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-calendar]", "type": "Function", "lineno": 249}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-math]", "type": "Function", "lineno": 249}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-mini-calendar]", "type": "Function", "lineno": 249}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-mini-math]", "type": "Function", "lineno": 249}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_calling[gpt-4o-case0]", "type": "Function", "lineno": 271}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_calling[gpt-4o-mini-case0]", "type": "Function", "lineno": 271}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_calling[gpt-4o-case0]", "type": "Function", "lineno": 295}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_calling[gpt-4o-mini-case0]", "type": "Function", "lineno": 295}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_required[gpt-4o-case0]", "type": "Function", "lineno": 323}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_required[gpt-4o-mini-case0]", "type": "Function", "lineno": 323}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_required[gpt-4o-case0]", "type": "Function", "lineno": 347}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_required[gpt-4o-mini-case0]", "type": "Function", "lineno": 347}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_none[gpt-4o-case0]", "type": "Function", "lineno": 374}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_none[gpt-4o-mini-case0]", "type": "Function", "lineno": 374}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_none[gpt-4o-case0]", "type": "Function", "lineno": 397}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_none[gpt-4o-mini-case0]", "type": "Function", "lineno": 397}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "type": "Function", "lineno": 425}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "type": "Function", "lineno": 516}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-stream=False]", "type": "Function", "lineno": 599}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-stream=True]", "type": "Function", "lineno": 599}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=False]", "type": "Function", "lineno": 599}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=True]", "type": "Function", "lineno": 599}]}], "tests": [{"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-earth]", "lineno": 96, "outcome": "passed", "keywords": ["test_chat_non_streaming_basic[gpt-4o-earth]", "parametrize", "pytestmark", "gpt-4o-earth", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "earth"}, "setup": {"duration": 0.05800094200003514, "outcome": "passed"}, "call": {"duration": 0.9904814920000717, "outcome": "passed"}, "teardown": {"duration": 0.00027889199998298864, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-saturn]", "lineno": 96, "outcome": "passed", "keywords": ["test_chat_non_streaming_basic[gpt-4o-saturn]", "parametrize", "pytestmark", "gpt-4o-saturn", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "saturn"}, "setup": {"duration": 0.024123422999991817, "outcome": "passed"}, "call": {"duration": 0.6046763599999849, "outcome": "passed"}, "teardown": {"duration": 0.0002723600000535953, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-mini-earth]", "lineno": 96, "outcome": "passed", "keywords": ["test_chat_non_streaming_basic[gpt-4o-mini-earth]", "parametrize", "pytestmark", "gpt-4o-mini-earth", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "earth"}, "setup": {"duration": 0.026411261000021113, "outcome": "passed"}, "call": {"duration": 0.4056515610000133, "outcome": "passed"}, "teardown": {"duration": 0.0002376739998908306, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_basic[gpt-4o-mini-saturn]", "lineno": 96, "outcome": "passed", "keywords": ["test_chat_non_streaming_basic[gpt-4o-mini-saturn]", "parametrize", "pytestmark", "gpt-4o-mini-saturn", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "saturn"}, "setup": {"duration": 0.024063361999992594, "outcome": "passed"}, "call": {"duration": 0.7558284450000201, "outcome": "passed"}, "teardown": {"duration": 0.00023180400000910595, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-earth]", "lineno": 115, "outcome": "passed", "keywords": ["test_chat_streaming_basic[gpt-4o-earth]", "parametrize", "pytestmark", "gpt-4o-earth", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "earth"}, "setup": {"duration": 0.02406596699995589, "outcome": "passed"}, "call": {"duration": 0.9585582790000444, "outcome": "passed"}, "teardown": {"duration": 0.0002543260000038572, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-saturn]", "lineno": 115, "outcome": "passed", "keywords": ["test_chat_streaming_basic[gpt-4o-saturn]", "parametrize", "pytestmark", "gpt-4o-saturn", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "saturn"}, "setup": {"duration": 0.024140154999940933, "outcome": "passed"}, "call": {"duration": 0.7279947990000437, "outcome": "passed"}, "teardown": {"duration": 0.00033174000009239535, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-mini-earth]", "lineno": 115, "outcome": "passed", "keywords": ["test_chat_streaming_basic[gpt-4o-mini-earth]", "parametrize", "pytestmark", "gpt-4o-mini-earth", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "earth"}, "setup": {"duration": 0.024162938000017675, "outcome": "passed"}, "call": {"duration": 0.47181257600004756, "outcome": "passed"}, "teardown": {"duration": 0.0002833000000919128, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_basic[gpt-4o-mini-saturn]", "lineno": 115, "outcome": "passed", "keywords": ["test_chat_streaming_basic[gpt-4o-mini-saturn]", "parametrize", "pytestmark", "gpt-4o-mini-saturn", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "saturn"}, "setup": {"duration": 0.023908993000077317, "outcome": "passed"}, "call": {"duration": 1.1022040929999548, "outcome": "passed"}, "teardown": {"duration": 0.0002494169999636142, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-messages_missing]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-messages_missing]", "parametrize", "pytestmark", "gpt-4o-messages_missing", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "messages_missing"}, "setup": {"duration": 0.023989673999949446, "outcome": "passed"}, "call": {"duration": 0.12161002200002713, "outcome": "passed"}, "teardown": {"duration": 0.0002863959999785948, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-messages_role_invalid]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-messages_role_invalid]", "parametrize", "pytestmark", "gpt-4o-messages_role_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "messages_role_invalid"}, "setup": {"duration": 0.023969365999960246, "outcome": "passed"}, "call": {"duration": 0.10571286699996563, "outcome": "passed"}, "teardown": {"duration": 0.00022754600001917424, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tool_choice_invalid]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-tool_choice_invalid]", "parametrize", "pytestmark", "gpt-4o-tool_choice_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tool_choice_invalid"}, "setup": {"duration": 0.023097578000033536, "outcome": "passed"}, "call": {"duration": 0.3112293179999597, "outcome": "passed"}, "teardown": {"duration": 0.00024136100000760052, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "parametrize", "pytestmark", "gpt-4o-tool_choice_no_tools", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tool_choice_no_tools"}, "setup": {"duration": 0.02307305300007556, "outcome": "passed"}, "call": {"duration": 0.13014365399999406, "outcome": "passed"}, "teardown": {"duration": 0.00023594200001753052, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-tools_type_invalid]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-tools_type_invalid]", "parametrize", "pytestmark", "gpt-4o-tools_type_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tools_type_invalid"}, "setup": {"duration": 0.02324441099995056, "outcome": "passed"}, "call": {"duration": 0.11251154499996119, "outcome": "passed"}, "teardown": {"duration": 0.0002517309999348072, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-messages_missing]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-messages_missing]", "parametrize", "pytestmark", "gpt-4o-mini-messages_missing", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "messages_missing"}, "setup": {"duration": 0.023170314000026337, "outcome": "passed"}, "call": {"duration": 0.10196662099997411, "outcome": "passed"}, "teardown": {"duration": 0.0002718480000112322, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-messages_role_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "messages_role_invalid"}, "setup": {"duration": 0.02327377799997521, "outcome": "passed"}, "call": {"duration": 0.1130027039999959, "outcome": "passed"}, "teardown": {"duration": 0.00021618499999931373, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-tool_choice_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tool_choice_invalid"}, "setup": {"duration": 0.023096266000038668, "outcome": "passed"}, "call": {"duration": 0.11926312999992206, "outcome": "passed"}, "teardown": {"duration": 0.00024421600005553046, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "parametrize", "pytestmark", "gpt-4o-mini-tool_choice_no_tools", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tool_choice_no_tools"}, "setup": {"duration": 0.023353826999937155, "outcome": "passed"}, "call": {"duration": 0.10006455099994582, "outcome": "passed"}, "teardown": {"duration": 0.0002206330000262824, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "lineno": 139, "outcome": "passed", "keywords": ["test_chat_non_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-tools_type_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tools_type_invalid"}, "setup": {"duration": 0.023639540999965902, "outcome": "passed"}, "call": {"duration": 0.11048282199999448, "outcome": "passed"}, "teardown": {"duration": 0.00022497100007967674, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-messages_missing]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-messages_missing]", "parametrize", "pytestmark", "gpt-4o-messages_missing", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "messages_missing"}, "setup": {"duration": 0.023571454999910202, "outcome": "passed"}, "call": {"duration": 0.12613175200010573, "outcome": "passed"}, "teardown": {"duration": 0.0002777790000436653, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-messages_role_invalid]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-messages_role_invalid]", "parametrize", "pytestmark", "gpt-4o-messages_role_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "messages_role_invalid"}, "setup": {"duration": 0.02387158700003056, "outcome": "passed"}, "call": {"duration": 0.0947803379999641, "outcome": "passed"}, "teardown": {"duration": 0.00027215899990551407, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tool_choice_invalid]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-tool_choice_invalid]", "parametrize", "pytestmark", "gpt-4o-tool_choice_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tool_choice_invalid"}, "setup": {"duration": 0.034048716000029344, "outcome": "passed"}, "call": {"duration": 0.11641891299996132, "outcome": "passed"}, "teardown": {"duration": 0.0003452260000358365, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-tool_choice_no_tools]", "parametrize", "pytestmark", "gpt-4o-tool_choice_no_tools", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tool_choice_no_tools"}, "setup": {"duration": 0.023311137000064264, "outcome": "passed"}, "call": {"duration": 0.11085491200003617, "outcome": "passed"}, "teardown": {"duration": 0.00025543700007801817, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-tools_type_invalid]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-tools_type_invalid]", "parametrize", "pytestmark", "gpt-4o-tools_type_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "tools_type_invalid"}, "setup": {"duration": 0.02338323300000411, "outcome": "passed"}, "call": {"duration": 0.11545634399999471, "outcome": "passed"}, "teardown": {"duration": 0.00022451000006640243, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-messages_missing]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-messages_missing]", "parametrize", "pytestmark", "gpt-4o-mini-messages_missing", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "messages_missing"}, "setup": {"duration": 0.023376729999995405, "outcome": "passed"}, "call": {"duration": 0.11677079699995829, "outcome": "passed"}, "teardown": {"duration": 0.0002614689999518305, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-messages_role_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-messages_role_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "messages_role_invalid"}, "setup": {"duration": 0.02568389699990803, "outcome": "passed"}, "call": {"duration": 0.12373239500004729, "outcome": "passed"}, "teardown": {"duration": 0.00025923400005467556, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-tool_choice_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tool_choice_invalid"}, "setup": {"duration": 0.022950283000000127, "outcome": "passed"}, "call": {"duration": 0.11650400799999261, "outcome": "passed"}, "teardown": {"duration": 0.0002293190000273171, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-tool_choice_no_tools]", "parametrize", "pytestmark", "gpt-4o-mini-tool_choice_no_tools", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tool_choice_no_tools"}, "setup": {"duration": 0.022246838000000935, "outcome": "passed"}, "call": {"duration": 0.1462623130000793, "outcome": "passed"}, "teardown": {"duration": 0.00026708999996571947, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "lineno": 160, "outcome": "passed", "keywords": ["test_chat_streaming_error_handling[gpt-4o-mini-tools_type_invalid]", "parametrize", "pytestmark", "gpt-4o-mini-tools_type_invalid", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "tools_type_invalid"}, "setup": {"duration": 0.023160089999919364, "outcome": "passed"}, "call": {"duration": 0.1389658339999187, "outcome": "passed"}, "teardown": {"duration": 0.00026765099994463526, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_image[gpt-4o-case0]", "lineno": 183, "outcome": "passed", "keywords": ["test_chat_non_streaming_image[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.023102485999970668, "outcome": "passed"}, "call": {"duration": 2.3964512259999537, "outcome": "passed"}, "teardown": {"duration": 0.0002711370000270108, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_image[gpt-4o-mini-case0]", "lineno": 183, "outcome": "passed", "keywords": ["test_chat_non_streaming_image[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.023121293000031073, "outcome": "passed"}, "call": {"duration": 2.6712143109999715, "outcome": "passed"}, "teardown": {"duration": 0.0002574610000465327, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_image[gpt-4o-case0]", "lineno": 202, "outcome": "passed", "keywords": ["test_chat_streaming_image[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.023717271999998957, "outcome": "passed"}, "call": {"duration": 2.4046310950000134, "outcome": "passed"}, "teardown": {"duration": 0.00024718199995277246, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_image[gpt-4o-mini-case0]", "lineno": 202, "outcome": "failed", "keywords": ["test_chat_streaming_image[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.023115254000003915, "outcome": "passed"}, "call": {"duration": 2.148575719000064, "outcome": "failed", "crash": {"path": "/home/runner/work/llama-stack-tests/llama-stack-tests/tests/verifications/openai_api/test_chat_completion.py", "lineno": 224, "message": "AssertionError: assert 'llama' in 'the image depicts three lamas standing near a body of water. two of them appear to be grazing or resting on the grass while a third is lying down. the background features a scenic landscape with trees and hills, and the water appears calm and clear.'\n +  where 'llama' = <built-in method lower of str object at 0x7fa17038fc70>()\n +    where <built-in method lower of str object at 0x7fa17038fc70> = 'llama'.lower\n +  and   'the image depicts three lamas standing near a body of water. two of them appear to be grazing or resting on the grass while a third is lying down. the background features a scenic landscape with trees and hills, and the water appears calm and clear.' = <built-in method lower of str object at 0x7fa17006f0e0>()\n +    where <built-in method lower of str object at 0x7fa17006f0e0> = 'The image depicts three lamas standing near a body of water. Two of them appear to be grazing or resting on the grass while a third is lying down. The background features a scenic landscape with trees and hills, and the water appears calm and clear.'.lower"}, "traceback": [{"path": "tests/verifications/openai_api/test_chat_completion.py", "lineno": 224, "message": "AssertionError"}], "longrepr": "request = <FixtureRequest for <Function test_chat_streaming_image[gpt-4o-mini-case0]>>\nopenai_client = <openai.OpenAI object at 0x7fa16fff87c0>, model = 'gpt-4o-mini'\nprovider = 'openai'\nverification_config = {'providers': {'cerebras': {'api_key_var': 'CEREBRAS_API_KEY', 'base_url': 'https://api.cerebras.ai/v1', 'model_displa...-versatile', 'meta-llama/llama-4-scout-17b-16e-instruct', 'meta-llama/llama-4-maverick-17b-128e-instruct'], ...}, ...}}\ncase = {'input': {'messages': [{'content': [{'text': 'What is in this image?', 'type': 'text'}, {'image_url': {...}, 'type': 'image_url'}], 'role': 'user'}]}, 'output': 'llama'}\n\n    @pytest.mark.parametrize(\n        \"case\",\n        chat_completion_test_cases[\"test_chat_image\"][\"test_params\"][\"case\"],\n        ids=case_id_generator,\n    )\n    def test_chat_streaming_image(request, openai_client, model, provider, verification_config, case):\n        test_name_base = get_base_test_name(request)\n        if should_skip_test(verification_config, provider, model, test_name_base):\n            pytest.skip(f\"Skipping {test_name_base} for model {model} on provider {provider} based on config.\")\n    \n        response = openai_client.chat.completions.create(\n            model=model,\n            messages=case[\"input\"][\"messages\"],\n            stream=True,\n        )\n        content = \"\"\n        for chunk in response:\n            content += chunk.choices[0].delta.content or \"\"\n    \n        # TODO: add detailed type validation\n    \n>       assert case[\"output\"].lower() in content.lower()\nE       AssertionError: assert 'llama' in 'the image depicts three lamas standing near a body of water. two of them appear to be grazing or resting on the grass while a third is lying down. the background features a scenic landscape with trees and hills, and the water appears calm and clear.'\nE        +  where 'llama' = <built-in method lower of str object at 0x7fa17038fc70>()\nE        +    where <built-in method lower of str object at 0x7fa17038fc70> = 'llama'.lower\nE        +  and   'the image depicts three lamas standing near a body of water. two of them appear to be grazing or resting on the grass while a third is lying down. the background features a scenic landscape with trees and hills, and the water appears calm and clear.' = <built-in method lower of str object at 0x7fa17006f0e0>()\nE        +    where <built-in method lower of str object at 0x7fa17006f0e0> = 'The image depicts three lamas standing near a body of water. Two of them appear to be grazing or resting on the grass while a third is lying down. The background features a scenic landscape with trees and hills, and the water appears calm and clear.'.lower\n\ntests/verifications/openai_api/test_chat_completion.py:224: AssertionError"}, "teardown": {"duration": 0.0003852610000194545, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-calendar]", "lineno": 226, "outcome": "passed", "keywords": ["test_chat_non_streaming_structured_output[gpt-4o-calendar]", "parametrize", "pytestmark", "gpt-4o-calendar", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "calendar"}, "setup": {"duration": 0.02334760799999458, "outcome": "passed"}, "call": {"duration": 0.6745196519999581, "outcome": "passed"}, "teardown": {"duration": 0.0002570999999988999, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-math]", "lineno": 226, "outcome": "passed", "keywords": ["test_chat_non_streaming_structured_output[gpt-4o-math]", "parametrize", "pytestmark", "gpt-4o-math", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "math"}, "setup": {"duration": 0.023616470999968442, "outcome": "passed"}, "call": {"duration": 3.6345290649999242, "outcome": "passed"}, "teardown": {"duration": 0.00026580600001580024, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-mini-calendar]", "lineno": 226, "outcome": "passed", "keywords": ["test_chat_non_streaming_structured_output[gpt-4o-mini-calendar]", "parametrize", "pytestmark", "gpt-4o-mini-calendar", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "calendar"}, "setup": {"duration": 0.023386994000020422, "outcome": "passed"}, "call": {"duration": 0.6768043299999817, "outcome": "passed"}, "teardown": {"duration": 0.0002341079999723661, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_structured_output[gpt-4o-mini-math]", "lineno": 226, "outcome": "passed", "keywords": ["test_chat_non_streaming_structured_output[gpt-4o-mini-math]", "parametrize", "pytestmark", "gpt-4o-mini-math", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "math"}, "setup": {"duration": 0.02256762100000742, "outcome": "passed"}, "call": {"duration": 3.832975509999983, "outcome": "passed"}, "teardown": {"duration": 0.00032239200004369195, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-calendar]", "lineno": 249, "outcome": "passed", "keywords": ["test_chat_streaming_structured_output[gpt-4o-calendar]", "parametrize", "pytestmark", "gpt-4o-calendar", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "calendar"}, "setup": {"duration": 0.023647482999990643, "outcome": "passed"}, "call": {"duration": 0.4805526310000232, "outcome": "passed"}, "teardown": {"duration": 0.00022689399997943838, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-math]", "lineno": 249, "outcome": "passed", "keywords": ["test_chat_streaming_structured_output[gpt-4o-math]", "parametrize", "pytestmark", "gpt-4o-math", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "math"}, "setup": {"duration": 0.02293185300004552, "outcome": "passed"}, "call": {"duration": 4.458842216999983, "outcome": "passed"}, "teardown": {"duration": 0.0002829890000839441, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-mini-calendar]", "lineno": 249, "outcome": "passed", "keywords": ["test_chat_streaming_structured_output[gpt-4o-mini-calendar]", "parametrize", "pytestmark", "gpt-4o-mini-calendar", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "calendar"}, "setup": {"duration": 0.02323316700005762, "outcome": "passed"}, "call": {"duration": 0.725894186000005, "outcome": "passed"}, "teardown": {"duration": 0.00024181199989925517, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_structured_output[gpt-4o-mini-math]", "lineno": 249, "outcome": "passed", "keywords": ["test_chat_streaming_structured_output[gpt-4o-mini-math]", "parametrize", "pytestmark", "gpt-4o-mini-math", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "math"}, "setup": {"duration": 0.02355381600000328, "outcome": "passed"}, "call": {"duration": 5.93982379199997, "outcome": "passed"}, "teardown": {"duration": 0.0002518700000564422, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_calling[gpt-4o-case0]", "lineno": 271, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_calling[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.023485915000037494, "outcome": "passed"}, "call": {"duration": 0.551188995000075, "outcome": "passed"}, "teardown": {"duration": 0.0002744529999745282, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_calling[gpt-4o-mini-case0]", "lineno": 271, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_calling[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.02401303600004212, "outcome": "passed"}, "call": {"duration": 0.9176170780000348, "outcome": "passed"}, "teardown": {"duration": 0.0003105709999999817, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_calling[gpt-4o-case0]", "lineno": 295, "outcome": "passed", "keywords": ["test_chat_streaming_tool_calling[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.02397601699999541, "outcome": "passed"}, "call": {"duration": 0.7953085069999588, "outcome": "passed"}, "teardown": {"duration": 0.0002556880000383899, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_calling[gpt-4o-mini-case0]", "lineno": 295, "outcome": "passed", "keywords": ["test_chat_streaming_tool_calling[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.023880952000013167, "outcome": "passed"}, "call": {"duration": 0.8181229729999586, "outcome": "passed"}, "teardown": {"duration": 0.0002736320000167325, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_required[gpt-4o-case0]", "lineno": 323, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_choice_required[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.035816092999994, "outcome": "passed"}, "call": {"duration": 0.5588690069999984, "outcome": "passed"}, "teardown": {"duration": 0.0003288149999889356, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_required[gpt-4o-mini-case0]", "lineno": 323, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_choice_required[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.02391680699997778, "outcome": "passed"}, "call": {"duration": 0.6043508040000916, "outcome": "passed"}, "teardown": {"duration": 0.0002713470000799134, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_required[gpt-4o-case0]", "lineno": 347, "outcome": "passed", "keywords": ["test_chat_streaming_tool_choice_required[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.02323077400001239, "outcome": "passed"}, "call": {"duration": 0.5418648030000668, "outcome": "passed"}, "teardown": {"duration": 0.00027256999999281106, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_required[gpt-4o-mini-case0]", "lineno": 347, "outcome": "passed", "keywords": ["test_chat_streaming_tool_choice_required[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.023734805999993114, "outcome": "passed"}, "call": {"duration": 0.5807342800000015, "outcome": "passed"}, "teardown": {"duration": 0.0002681410001059703, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_none[gpt-4o-case0]", "lineno": 374, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_choice_none[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.023322613999994246, "outcome": "passed"}, "call": {"duration": 0.443166304999977, "outcome": "passed"}, "teardown": {"duration": 0.00027814999998554413, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_tool_choice_none[gpt-4o-mini-case0]", "lineno": 374, "outcome": "passed", "keywords": ["test_chat_non_streaming_tool_choice_none[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.02375363099997685, "outcome": "passed"}, "call": {"duration": 0.6874747640000578, "outcome": "passed"}, "teardown": {"duration": 0.0002475829999184498, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_none[gpt-4o-case0]", "lineno": 397, "outcome": "passed", "keywords": ["test_chat_streaming_tool_choice_none[gpt-4o-case0]", "parametrize", "pytestmark", "gpt-4o-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "case0"}, "setup": {"duration": 0.023238539999965724, "outcome": "passed"}, "call": {"duration": 0.8390772770000012, "outcome": "passed"}, "teardown": {"duration": 0.0002815269999700831, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_tool_choice_none[gpt-4o-mini-case0]", "lineno": 397, "outcome": "passed", "keywords": ["test_chat_streaming_tool_choice_none[gpt-4o-mini-case0]", "parametrize", "pytestmark", "gpt-4o-mini-case0", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "case0"}, "setup": {"duration": 0.023326293000081932, "outcome": "passed"}, "call": {"duration": 0.4890618199999608, "outcome": "passed"}, "teardown": {"duration": 0.0002501569999822095, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "parametrize", "pytestmark", "gpt-4o-text_then_weather_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "text_then_weather_tool"}, "setup": {"duration": 0.0288707180000074, "outcome": "passed"}, "call": {"duration": 1.7527553830000215, "outcome": "passed"}, "teardown": {"duration": 0.0002717280000297251, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "parametrize", "pytestmark", "gpt-4o-weather_tool_then_text", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "weather_tool_then_text"}, "setup": {"duration": 0.023491183000032834, "outcome": "passed"}, "call": {"duration": 1.1504164539999238, "outcome": "passed"}, "teardown": {"duration": 0.00028303900000992144, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "parametrize", "pytestmark", "gpt-4o-add_product_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "add_product_tool"}, "setup": {"duration": 0.02336872199998652, "outcome": "passed"}, "call": {"duration": 0.9614504549999765, "outcome": "passed"}, "teardown": {"duration": 0.0002908029999844075, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "parametrize", "pytestmark", "gpt-4o-get_then_create_event_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "get_then_create_event_tool"}, "setup": {"duration": 0.02338598500000444, "outcome": "passed"}, "call": {"duration": 2.6401725599999963, "outcome": "passed"}, "teardown": {"duration": 0.00028086500003610126, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "lineno": 425, "outcome": "failed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "parametrize", "pytestmark", "gpt-4o-compare_monthly_expense_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "compare_monthly_expense_tool"}, "setup": {"duration": 0.024336176000019805, "outcome": "passed"}, "call": {"duration": 2.2605045020000034, "outcome": "failed", "crash": {"path": "/home/runner/work/llama-stack-tests/llama-stack-tests/tests/verifications/openai_api/test_chat_completion.py", "lineno": 512, "message": "AssertionError: Expected one of ['yes'] in content, but got: 'No.'\nassert False\n +  where False = any(<generator object test_chat_non_streaming_multi_turn_tool_calling.<locals>.<genexpr> at 0x7fa17000bca0>)"}, "traceback": [{"path": "tests/verifications/openai_api/test_chat_completion.py", "lineno": 512, "message": "AssertionError"}], "longrepr": "request = <FixtureRequest for <Function test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]>>\nopenai_client = <openai.OpenAI object at 0x7fa17016a080>, model = 'gpt-4o'\nprovider = 'openai'\nverification_config = {'providers': {'cerebras': {'api_key_var': 'CEREBRAS_API_KEY', 'base_url': 'https://api.cerebras.ai/v1', 'model_displa...-versatile', 'meta-llama/llama-4-scout-17b-16e-instruct', 'meta-llama/llama-4-maverick-17b-128e-instruct'], ...}, ...}}\ncase = {'case_id': 'compare_monthly_expense_tool', 'expected': [{'num_tool_calls': 1, 'tool_arguments': {'month': 1, 'year': ... 'Total expenses for January 2025: $1000'}\"}, {'response': \"{'response': 'Total expenses for February 2024: $2000'}\"}]}\n\n    @pytest.mark.parametrize(\n        \"case\",\n        chat_completion_test_cases.get(\"test_chat_multi_turn_tool_calling\", {}).get(\"test_params\", {}).get(\"case\", []),\n        ids=case_id_generator,\n    )\n    def test_chat_non_streaming_multi_turn_tool_calling(request, openai_client, model, provider, verification_config, case):\n        \"\"\"\n        Test cases for multi-turn tool calling.\n        Tool calls are asserted.\n        Tool responses are provided in the test case.\n        Final response is asserted.\n        \"\"\"\n    \n        test_name_base = get_base_test_name(request)\n        if should_skip_test(verification_config, provider, model, test_name_base):\n            pytest.skip(f\"Skipping {test_name_base} for model {model} on provider {provider} based on config.\")\n    \n        # Create a copy of the messages list to avoid modifying the original\n        messages = []\n        tools = case[\"input\"][\"tools\"]\n        # Use deepcopy to prevent modification across runs/parametrization\n        expected_results = copy.deepcopy(case[\"expected\"])\n        tool_responses = copy.deepcopy(case.get(\"tool_responses\", []))\n        input_messages_turns = copy.deepcopy(case[\"input\"][\"messages\"])\n    \n        # keep going until either\n        # 1. we have messages to test in multi-turn\n        # 2. no messages but last message is tool response\n        while len(input_messages_turns) > 0 or (len(messages) > 0 and messages[-1][\"role\"] == \"tool\"):\n            # do not take new messages if last message is tool response\n            if len(messages) == 0 or messages[-1][\"role\"] != \"tool\":\n                new_messages = input_messages_turns.pop(0)\n                # Ensure new_messages is a list of message objects\n                if isinstance(new_messages, list):\n                    messages.extend(new_messages)\n                else:\n                    # If it's a single message object, add it directly\n                    messages.append(new_messages)\n    \n            # --- API Call ---\n            response = openai_client.chat.completions.create(\n                model=model,\n                messages=messages,\n                tools=tools,\n                stream=False,\n            )\n    \n            # --- Process Response ---\n            assistant_message = response.choices[0].message\n            messages.append(assistant_message.model_dump(exclude_unset=True))\n    \n            assert assistant_message.role == \"assistant\"\n    \n            # Get the expected result data\n            expected = expected_results.pop(0)\n            num_tool_calls = expected[\"num_tool_calls\"]\n    \n            # --- Assertions based on expected result ---\n            assert len(assistant_message.tool_calls or []) == num_tool_calls, (\n                f\"Expected {num_tool_calls} tool calls, but got {len(assistant_message.tool_calls or [])}\"\n            )\n    \n            if num_tool_calls > 0:\n                tool_call = assistant_message.tool_calls[0]\n                assert tool_call.function.name == expected[\"tool_name\"], (\n                    f\"Expected tool '{expected['tool_name']}', got '{tool_call.function.name}'\"\n                )\n                # Parse the JSON string arguments before comparing\n                actual_arguments = json.loads(tool_call.function.arguments)\n                assert actual_arguments == expected[\"tool_arguments\"], (\n                    f\"Expected arguments '{expected['tool_arguments']}', got '{actual_arguments}'\"\n                )\n    \n                # Prepare and append the tool response for the next turn\n                tool_response = tool_responses.pop(0)\n                messages.append(\n                    {\n                        \"role\": \"tool\",\n                        \"tool_call_id\": tool_call.id,\n                        \"content\": tool_response[\"response\"],\n                    }\n                )\n            else:\n                assert assistant_message.content is not None, \"Expected content, but none received.\"\n                expected_answers = expected[\"answer\"]  # This is now a list\n                content_lower = assistant_message.content.lower()\n>               assert any(ans.lower() in content_lower for ans in expected_answers), (\n                    f\"Expected one of {expected_answers} in content, but got: '{assistant_message.content}'\"\n                )\nE               AssertionError: Expected one of ['yes'] in content, but got: 'No.'\nE               assert False\nE                +  where False = any(<generator object test_chat_non_streaming_multi_turn_tool_calling.<locals>.<genexpr> at 0x7fa17000bca0>)\n\ntests/verifications/openai_api/test_chat_completion.py:512: AssertionError"}, "teardown": {"duration": 0.000314757999944959, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "parametrize", "pytestmark", "gpt-4o-mini-text_then_weather_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "text_then_weather_tool"}, "setup": {"duration": 0.023461978000000272, "outcome": "passed"}, "call": {"duration": 1.8897442730000193, "outcome": "passed"}, "teardown": {"duration": 0.00026835199992092384, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "parametrize", "pytestmark", "gpt-4o-mini-weather_tool_then_text", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "weather_tool_then_text"}, "setup": {"duration": 0.023611237000068286, "outcome": "passed"}, "call": {"duration": 1.3404725030000009, "outcome": "passed"}, "teardown": {"duration": 0.0002191300000049523, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "parametrize", "pytestmark", "gpt-4o-mini-add_product_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "add_product_tool"}, "setup": {"duration": 0.023341777000041475, "outcome": "passed"}, "call": {"duration": 1.0807472349999898, "outcome": "passed"}, "teardown": {"duration": 0.00021539299996220507, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "parametrize", "pytestmark", "gpt-4o-mini-get_then_create_event_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "get_then_create_event_tool"}, "setup": {"duration": 0.02257017099998393, "outcome": "passed"}, "call": {"duration": 6.12932015399997, "outcome": "passed"}, "teardown": {"duration": 0.000279793000004247, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "lineno": 425, "outcome": "passed", "keywords": ["test_chat_non_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "parametrize", "pytestmark", "gpt-4o-mini-compare_monthly_expense_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "compare_monthly_expense_tool"}, "setup": {"duration": 0.023300638000023355, "outcome": "passed"}, "call": {"duration": 1.658393177999983, "outcome": "passed"}, "teardown": {"duration": 0.0002726700000721394, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-text_then_weather_tool]", "parametrize", "pytestmark", "gpt-4o-text_then_weather_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "text_then_weather_tool"}, "setup": {"duration": 0.02326272200002677, "outcome": "passed"}, "call": {"duration": 1.922117023999931, "outcome": "passed"}, "teardown": {"duration": 0.0003201690000196322, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-weather_tool_then_text]", "parametrize", "pytestmark", "gpt-4o-weather_tool_then_text", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "weather_tool_then_text"}, "setup": {"duration": 0.023689540000077614, "outcome": "passed"}, "call": {"duration": 1.1769135979999419, "outcome": "passed"}, "teardown": {"duration": 0.0002490460000217354, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-add_product_tool]", "parametrize", "pytestmark", "gpt-4o-add_product_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "add_product_tool"}, "setup": {"duration": 0.02368900700002996, "outcome": "passed"}, "call": {"duration": 1.379896279000036, "outcome": "passed"}, "teardown": {"duration": 0.00023473899989312486, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-get_then_create_event_tool]", "parametrize", "pytestmark", "gpt-4o-get_then_create_event_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "get_then_create_event_tool"}, "setup": {"duration": 0.027044018999959007, "outcome": "passed"}, "call": {"duration": 3.6683724580000217, "outcome": "passed"}, "teardown": {"duration": 0.00027794899995114974, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-compare_monthly_expense_tool]", "parametrize", "pytestmark", "gpt-4o-compare_monthly_expense_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "compare_monthly_expense_tool"}, "setup": {"duration": 0.023697573999925226, "outcome": "passed"}, "call": {"duration": 2.349550700000009, "outcome": "passed"}, "teardown": {"duration": 0.0002803239999593643, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-text_then_weather_tool]", "parametrize", "pytestmark", "gpt-4o-mini-text_then_weather_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "text_then_weather_tool"}, "setup": {"duration": 0.02329067900006976, "outcome": "passed"}, "call": {"duration": 1.8184502089999341, "outcome": "passed"}, "teardown": {"duration": 0.000317292999966412, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-weather_tool_then_text]", "parametrize", "pytestmark", "gpt-4o-mini-weather_tool_then_text", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "weather_tool_then_text"}, "setup": {"duration": 0.02315782300001956, "outcome": "passed"}, "call": {"duration": 1.0929762499999924, "outcome": "passed"}, "teardown": {"duration": 0.0002717680000614564, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-add_product_tool]", "parametrize", "pytestmark", "gpt-4o-mini-add_product_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "add_product_tool"}, "setup": {"duration": 0.023737189000030412, "outcome": "passed"}, "call": {"duration": 1.2694199920000528, "outcome": "passed"}, "teardown": {"duration": 0.0002268240000375954, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-get_then_create_event_tool]", "parametrize", "pytestmark", "gpt-4o-mini-get_then_create_event_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "get_then_create_event_tool"}, "setup": {"duration": 0.022837406999997256, "outcome": "passed"}, "call": {"duration": 3.6527360879999833, "outcome": "passed"}, "teardown": {"duration": 0.0002752150001015252, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "lineno": 516, "outcome": "passed", "keywords": ["test_chat_streaming_multi_turn_tool_calling[gpt-4o-mini-compare_monthly_expense_tool]", "parametrize", "pytestmark", "gpt-4o-mini-compare_monthly_expense_tool", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "compare_monthly_expense_tool"}, "setup": {"duration": 0.023401226000032693, "outcome": "passed"}, "call": {"duration": 2.1106000149999318, "outcome": "passed"}, "teardown": {"duration": 0.000421788000039669, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-stream=False]", "lineno": 599, "outcome": "passed", "keywords": ["test_chat_multi_turn_multiple_images[gpt-4o-stream=False]", "parametrize", "pytestmark", "gpt-4o-stream=False", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "stream=False"}, "setup": {"duration": 0.024133144000074935, "outcome": "passed"}, "call": {"duration": 7.7192245549999825, "outcome": "passed"}, "teardown": {"duration": 0.0002709960000402134, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-stream=True]", "lineno": 599, "outcome": "passed", "keywords": ["test_chat_multi_turn_multiple_images[gpt-4o-stream=True]", "parametrize", "pytestmark", "gpt-4o-stream=True", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o", "case_id": "stream=True"}, "setup": {"duration": 0.024435261000007813, "outcome": "passed"}, "call": {"duration": 6.371839702999978, "outcome": "passed"}, "teardown": {"duration": 0.00032752300000993273, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=False]", "lineno": 599, "outcome": "passed", "keywords": ["test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=False]", "parametrize", "pytestmark", "gpt-4o-mini-stream=False", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "stream=False"}, "setup": {"duration": 0.024073558999930356, "outcome": "passed"}, "call": {"duration": 6.385376665000081, "outcome": "passed"}, "teardown": {"duration": 0.0002291790000299443, "outcome": "passed"}}, {"nodeid": "tests/verifications/openai_api/test_chat_completion.py::test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=True]", "lineno": 599, "outcome": "passed", "keywords": ["test_chat_multi_turn_multiple_images[gpt-4o-mini-stream=True]", "parametrize", "pytestmark", "gpt-4o-mini-stream=True", "test_chat_completion.py", "openai_api", "verifications", "tests", "llama-stack-tests", ""], "metadata": {"model": "gpt-4o-mini", "case_id": "stream=True"}, "setup": {"duration": 0.023787964000007378, "outcome": "passed"}, "call": {"duration": 4.920254741000008, "outcome": "passed"}, "teardown": {"duration": 0.0018538460000172563, "outcome": "passed"}}]}